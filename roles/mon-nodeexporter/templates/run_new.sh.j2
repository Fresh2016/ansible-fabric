#/bin/bash
help() {
    echo "help:"
    echo "    ./run-{{ inventory_hostname_short|lower|replace('-','_') }}.sh [OPTIONS]"
    echo "    [OPTIONS]"
    echo "    --force -> to remove existing docker instance, then deploy new one."
    echo "    --safe  -> will not remove existing docker instance with same name."
    exit 0
}

run_container() {
    docker run                                          \
      --name nodeexporter                               \
      --hostname nodeexporter                           \
      --volume /proc:/host/proc:ro                      \
      --volume /sys:/host/sys:ro                        \
      --volume /:/rootfs:ro                             \
      --publish 0.0.0.0:{{ nodeexporter_expose_port }}:9100 \
      --network host                                    \
      --dns {{ hostvars['dnsmasq1'].ansible_host }}     \
      --dns {{ hostvars['dnsmasq2'].ansible_host }}     \
      --dns-search {{ dnsmasq_domain }}                 \
      --label com.jcloud.group="monitoring"             \
      --label com.jcloud.nodetype="nodeexporter"        \
      --restart always                                  \
      --detach                                          \
      {{ nodeexporter_image }}                          \
      -collector.procfs /host/proc                      \
      -collector.sysfs /host/sys                        \
      -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($|/)"
      
}
echo ">> BEGIN"
if [[ $# != '1' ]]; then
    echo "[ERROR] Only take one args."
    echo "      You enter $# args --> \"$@\""
    echo ""
    help
fi
if [[ "$1" == "--force" ]]; then
    echo ">> Deleting existing {{ inventory_hostname_short|lower|replace('-','_') }} ..."
    docker rm -f {{ inventory_hostname_short|lower|replace('-','_') }} 
    echo ">> Try to run new {{ inventory_hostname_short|lower|replace('-','_') }} ..."  
elif [[ "$1" == "--safe" ]]; then
    echo ">> Try to run new {{ inventory_hostname_short|lower|replace('-','_') }} ..."
else
    help
fi
run_container
echo ">> END"
