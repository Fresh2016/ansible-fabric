#/bin/bash
help() {
    echo "help:"
    echo "    ./run-{{ inventory_hostname_short | lower }}.sh [OPTIONS]"
    echo "    [OPTIONS]"
    echo "    --force -> to remove existing docker instance, then deploy new one."
    echo "    --safe  -> will not remove existing docker instance with same name."
    exit 0
}

run_container() {
    docker run --name {{ inventory_hostname_short | lower }}        \
      --hostname {{ inventory_hostname_short | lower }}             \
      --env-file ./env_file                                         \
      --volume /hfc-data/{{ inventory_hostname_short | lower }}/configtx/:/etc/hyperledger/configtx/ 	\
      --volume /hfc-data/{{ inventory_hostname_short | lower }}/data/:/var/hyperledger/ 	\
      --publish 0.0.0.0:{{ orderer_expose_port }}:{{ orderder_listen_port }} 	\
      --dns {{ hostvars['dnsmasq_server'].ansible_host }}           \
      --restart unless-stopped                                      \
      --detach                                                      \
      {{ hfc_images.orderer.tags.0 }}                               \
      orderer
}
echo ">> BEGIN"
if [[ $# != '1' ]]; then
    echo "[ERROR] Only take one args."
    echo "      You enter $# args --> \"$@\""
    echo ""
    help
fi
if [[ "$1" == "--force" ]]; then
    echo ">> Deleting existing {{ inventory_hostname_short | lower }} ..."
    docker rm -f {{ inventory_hostname_short | lower }} 
    echo ">> Try to run new {{ inventory_hostname_short | lower }} ..."  
elif [[ "$1" == "--safe" ]]; then
    echo ">> Try to run new {{ inventory_hostname_short | lower }} ..."
else
    help
fi
run_container
echo ">> END"
